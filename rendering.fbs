namespace rlbot.flat;

enum TextHAlign: ubyte {
  Left = 0,
  Center = 1,
  Right = 2,
}

enum TextVAlign: ubyte {
  Top = 0,
  Center = 1,
  Bottom = 2,
}

table Color {
  a:ubyte = 0;
  r:ubyte = 0;
  g:ubyte = 0;
  b:ubyte = 0;
}

table Line3D {
  start:Vector3 (required);
  end:Vector3 (required);
  color:Color (required);
}

table PolyLine3D {
  points:[Vector3] (required);
  color:Color (required);
}

table String2D {
  text:string (required);
  /// 0 = Left
  /// 1 = Right
  x:float;
  /// 0 = Top
  /// 1 = Bottom
  y:float;
  scale:float;
  foreground:Color (required);
  background:Color (required);
  h_align:TextHAlign;
  v_align:TextVAlign;
}

table String3D {
  text:string (required);
  position:Vector3 (required);
  scale:float;
  foreground:Color (required);
  background:Color (required);
  h_align:TextHAlign;
  v_align:TextVAlign;
}

union RenderType {
  Line3D,
  PolyLine3D,
  String2D,
  String3D,
}

table RenderMessage {
  variety:RenderType (required);
}

table RenderGroup {
  render_messages:[RenderMessage] (required);
  /// The id of the render group
  id:int;
}

root_type RenderGroup;

table RemoveRenderGroup {
  id:int;
}
